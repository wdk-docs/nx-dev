const ModuleFederationPlugin = require("webpack/lib/container/ModuleFederationPlugin");
const mf = require("@angular-architects/module-federation/webpack");
const path = require("path");
const share = mf.share;

/**
* We use the NX_TSCONFIG_PATH environment variable when using the @nrwl/angular:webpack-browser
* builder as it will generate a temporary tsconfig file which contains any required remappings of
* shared libraries.
* A remapping will occur when a library is buildable, as webpack needs to know the location of the
* built files for the buildable library.
* This NX_TSCONFIG_PATH environment variable is set by the @nrwl/angular:webpack-browser and it contains
* the location of the generated temporary tsconfig file.
*/
const tsConfigPath = process.env.NX_TSCONFIG_PATH ?? path.join(__dirname, '<%= offsetFromRoot %>tsconfig.base.json');

const workspaceRootPath = path.join(__dirname, '<%= offsetFromRoot %>');
const sharedMappings = new mf.SharedMappings();
sharedMappings.register(tsConfigPath, [
  /* mapped paths to share */
], workspaceRootPath);

module.exports = {
  output: {
    uniqueName: "<%= name %>",
    publicPath: "auto",
  },
  optimization: {
    runtimeChunk: false,
  },
  experiments: {
    outputModule: true
  },
  resolve: {
    alias: {
      ...sharedMappings.getAliases(),
    },
  },
  plugins: [
    new ModuleFederationPlugin({<% if(type === 'remote') { %>
      name: "<%= name %>",
      filename: "remoteEntry.js",
      exposes: {
        './Module': '<%= sourceRoot %>/src/app/remote-entry/entry.module.ts',
      },<% } %><% if(type === 'host') { %>
      remotes: {
      <% remotes.forEach(function(remote) { %>"<%= remote.remoteName %>": "http://localhost:<%= remote.port %>/remoteEntry.js",<% }); %>
      },<% } %>
      shared: share({<% sharedLibraries.forEach(function (lib) { %>
        "<%= lib %>": { singleton: true, strictVersion: true, requiredVersion: 'auto', includeSecondaries: true },<% }); %>
        ...sharedMappings.getDescriptors(),
      }),
      library: { 
        type: 'module' 
      },
    }),
    sharedMappings.getPlugin(),
  ],
};
